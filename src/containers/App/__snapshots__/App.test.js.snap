// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    error="nono"
    user={
        Object {
            "id": 1,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="nav-container"
>
          <Connect(NavContainer)
                    toggleLogin={[Function]}
                    toggleShowUserRides={[Function]}
          />
</div>,
        <div
          className="error-container"
>
          <h1>
                    Whoops!
          </h1>
          <strong>
                    nono
          </strong>
          <button
                    className="error-close-btn"
                    onClick={undefined}
          >
                    ok!
          </button>
</div>,
        false,
        0,
        <Switch>
          <Route
                    component={[Function]}
                    exact={true}
                    path="/"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/rides"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/profile"
          />
</Switch>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Connect(NavContainer)
            toggleLogin={[Function]}
            toggleShowUserRides={[Function]}
/>,
          "className": "nav-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "toggleLogin": [Function],
            "toggleShowUserRides": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Whoops!
</h1>,
            <strong>
              nono
</strong>,
            <button
              className="error-close-btn"
              onClick={undefined}
>
              ok!
</button>,
          ],
          "className": "error-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Whoops!",
            },
            "ref": null,
            "rendered": "Whoops!",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "nono",
            },
            "ref": null,
            "rendered": "nono",
            "type": "strong",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "ok!",
              "className": "error-close-btn",
              "onClick": undefined,
            },
            "ref": null,
            "rendered": "ok!",
            "type": "button",
          },
        ],
        "type": "div",
      },
      false,
      0,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              exact={true}
              path="/"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/rides"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/profile"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/rides",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/profile",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="nav-container"
>
            <Connect(NavContainer)
                        toggleLogin={[Function]}
                        toggleShowUserRides={[Function]}
            />
</div>,
          <div
            className="error-container"
>
            <h1>
                        Whoops!
            </h1>
            <strong>
                        nono
            </strong>
            <button
                        className="error-close-btn"
                        onClick={undefined}
            >
                        ok!
            </button>
</div>,
          false,
          0,
          <Switch>
            <Route
                        component={[Function]}
                        exact={true}
                        path="/"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/rides"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/profile"
            />
</Switch>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(NavContainer)
              toggleLogin={[Function]}
              toggleShowUserRides={[Function]}
/>,
            "className": "nav-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "toggleLogin": [Function],
              "toggleShowUserRides": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Whoops!
</h1>,
              <strong>
                nono
</strong>,
              <button
                className="error-close-btn"
                onClick={undefined}
>
                ok!
</button>,
            ],
            "className": "error-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Whoops!",
              },
              "ref": null,
              "rendered": "Whoops!",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "nono",
              },
              "ref": null,
              "rendered": "nono",
              "type": "strong",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "ok!",
                "className": "error-close-btn",
                "onClick": undefined,
              },
              "ref": null,
              "rendered": "ok!",
              "type": "button",
            },
          ],
          "type": "div",
        },
        false,
        0,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                component={[Function]}
                exact={true}
                path="/"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/rides"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/profile"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/rides",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/profile",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
